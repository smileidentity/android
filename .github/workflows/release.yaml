name: Release Android SDK
on:
  push:
    tags:
      # This is used instead of 'v*.*.*' to prevent accidentally releasing -SNAPSHOT versions
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup Gradle # Although not strictly necessary, it is useful for better caching
        uses: gradle/gradle-build-action@v2
      - name: Write Smile Config
        run: |
          echo '${{ secrets.SMILE_CONFIG_PARTNER_002 }}' > sample/src/main/assets/smile_config.json
      - name: Build, Test, Lint, Assemble, Publish
#        run: ./gradlew build assembleRelease publish -PSENTRY_DSN=${{ secrets.SENTRY_DSN }}
        run: ./gradlew build assembleRelease -PSENTRY_DSN=${{ secrets.SENTRY_DSN }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_GPG_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ARTIFACT_GPG_SIGNING_KEY_ID }}
      - name: Archive SDK AAR
        uses: actions/upload-artifact@v2
        with:
          name: SDK AAR
          path: lib/build/outputs/aar/lib-release.aar
      - name: Archive Sample App
        uses: actions/upload-artifact@v2
        with:
          name: Sample App APK
          path: sample/build/outputs/apk/release/sample-release.apk
      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lib/build/outputs/aar/lib-release.aar
          asset_name: com.smileidentity_android-sdk_${{ github.ref }}.aar
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sample/build/outputs/apk/release/sample-release.apk
          asset_name: sample_partner002_${{ github.ref }}.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Deploy Sample App to Play Store Internal Testing Track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.smileidentity.sample
          release_track: internal
          release_status: completed
          releaseFiles: sample/build/outputs/apk/release/sample-release.apk
